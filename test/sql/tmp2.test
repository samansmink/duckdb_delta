# name: test/sql/generated/tpcds.test_slow
# description: Test on some medium sized data
# group: [delta_generated]

require parquet

require delta

require tpcds

# run 1, run 3
#statement ok
#SET VARIABLE delta_path = '/Users/sam/Development/delta_benchmarking_huge/tpcds_sf100_liquid_clustering';
#create view call_center as from delta_scan(getvariable('delta_path') || '/call_center');
#create view catalog_page as from delta_scan(getvariable('delta_path') || '/catalog_page');
#create view catalog_returns as from delta_scan(getvariable('delta_path') || '/catalog_returns');
#create view catalog_sales as from delta_scan(getvariable('delta_path') || '/catalog_sales');
#create view customer as from delta_scan(getvariable('delta_path') || '/customer');
#create view customer_demographics as from delta_scan(getvariable('delta_path') || '/customer_demographics');
#create view customer_address as from delta_scan(getvariable('delta_path') || '/customer_address');
#create view date_dim as from delta_scan(getvariable('delta_path') || '/date_dim');
#create view household_demographics as from delta_scan(getvariable('delta_path') || '/household_demographics');
#create view inventory as from delta_scan(getvariable('delta_path') || '/inventory');
#create view income_band as from delta_scan(getvariable('delta_path') || '/income_band');
#create view item as from delta_scan(getvariable('delta_path') || '/item');
#create view promotion as from delta_scan(getvariable('delta_path') || '/promotion');
#create view reason as from delta_scan(getvariable('delta_path') || '/reason');
#create view ship_mode as from delta_scan(getvariable('delta_path') || '/ship_mode');
#create view store as from delta_scan(getvariable('delta_path') || '/store');
#create view store_returns as from delta_scan(getvariable('delta_path') || '/store_returns');
#create view store_sales as from delta_scan(getvariable('delta_path') || '/store_sales');
#create view time_dim as from delta_scan(getvariable('delta_path') || '/time_dim');
#create view warehouse as from delta_scan(getvariable('delta_path') || '/warehouse');
#create view web_page as from delta_scan(getvariable('delta_path') || '/web_page');
#create view web_returns as from delta_scan(getvariable('delta_path') || '/web_returns');
#create view web_sales as from delta_scan(getvariable('delta_path') || '/web_sales');
#create view web_site as from delta_scan(getvariable('delta_path') || '/web_site');

# run 2, run 4
statement ok
SET VARIABLE delta_path = '/Users/sam/Development/delta_benchmarking_huge/tpcds_sf100_pyspark';
create view call_center as from delta_scan(getvariable('delta_path') || '/call_center/delta_lake');
create view catalog_page as from delta_scan(getvariable('delta_path') || '/catalog_page/delta_lake');
create view catalog_returns as from delta_scan(getvariable('delta_path') || '/catalog_returns/delta_lake');
create view catalog_sales as from delta_scan(getvariable('delta_path') || '/catalog_sales/delta_lake');
create view customer as from delta_scan(getvariable('delta_path') || '/customer/delta_lake');
create view customer_demographics as from delta_scan(getvariable('delta_path') || '/customer_demographics/delta_lake');
create view customer_address as from delta_scan(getvariable('delta_path') || '/customer_address/delta_lake');
create view date_dim as from delta_scan(getvariable('delta_path') || '/date_dim/delta_lake');
create view household_demographics as from delta_scan(getvariable('delta_path') || '/household_demographics/delta_lake');
create view inventory as from delta_scan(getvariable('delta_path') || '/inventory/delta_lake');
create view income_band as from delta_scan(getvariable('delta_path') || '/income_band/delta_lake');
create view item as from delta_scan(getvariable('delta_path') || '/item/delta_lake');
create view promotion as from delta_scan(getvariable('delta_path') || '/promotion/delta_lake');
create view reason as from delta_scan(getvariable('delta_path') || '/reason/delta_lake');
create view ship_mode as from delta_scan(getvariable('delta_path') || '/ship_mode/delta_lake');
create view store as from delta_scan(getvariable('delta_path') || '/store/delta_lake');
create view store_returns as from delta_scan(getvariable('delta_path') || '/store_returns/delta_lake');
create view store_sales as from delta_scan(getvariable('delta_path') || '/store_sales/delta_lake');
create view time_dim as from delta_scan(getvariable('delta_path') || '/time_dim/delta_lake');
create view warehouse as from delta_scan(getvariable('delta_path') || '/warehouse/delta_lake');
create view web_page as from delta_scan(getvariable('delta_path') || '/web_page/delta_lake');
create view web_returns as from delta_scan(getvariable('delta_path') || '/web_returns/delta_lake');
create view web_sales as from delta_scan(getvariable('delta_path') || '/web_sales/delta_lake');
create view web_site as from delta_scan(getvariable('delta_path') || '/web_site/delta_lake');

# DuckDB run 5
#statement ok
#attach '/Users/sam/Development/delta_benchmarking_huge/tpcds_sf100_pyspark/duckdb.db' as tpcds;
#
#statement ok
#use tpcds;

mode output_result 

statement ok
explain WITH cross_items AS
                  (SELECT i_item_sk ss_item_sk
                   FROM item,
                     (SELECT iss.i_brand_id brand_id,
                             iss.i_class_id class_id,
                             iss.i_category_id category_id
                      FROM store_sales,
                           item iss,
                           date_dim d1
                      WHERE ss_item_sk = iss.i_item_sk
                        AND ss_sold_date_sk = d1.d_date_sk
                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 INTERSECT
                        SELECT ics.i_brand_id,
                               ics.i_class_id,
                               ics.i_category_id
                        FROM catalog_sales,
                             item ics,
                             date_dim d2 WHERE cs_item_sk = ics.i_item_sk
                        AND cs_sold_date_sk = d2.d_date_sk
                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 INTERSECT
                        SELECT iws.i_brand_id,
                               iws.i_class_id,
                               iws.i_category_id
                        FROM web_sales,
                             item iws,
                             date_dim d3 WHERE ws_item_sk = iws.i_item_sk
                        AND ws_sold_date_sk = d3.d_date_sk
                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) sq1
                   WHERE i_brand_id = brand_id
                     AND i_class_id = class_id
                     AND i_category_id = category_id ),
                     avg_sales AS
                  (SELECT avg(quantity*list_price) average_sales
                   FROM
                     (SELECT ss_quantity quantity,
                             ss_list_price list_price
                      FROM store_sales,
                           date_dim
                      WHERE ss_sold_date_sk = d_date_sk
                        AND d_year BETWEEN 1999 AND 1999 + 2
                      UNION ALL SELECT cs_quantity quantity,
                                       cs_list_price list_price
                      FROM catalog_sales,
                           date_dim
                      WHERE cs_sold_date_sk = d_date_sk
                        AND d_year BETWEEN 1999 AND 1999 + 2
                      UNION ALL SELECT ws_quantity quantity,
                                       ws_list_price list_price
                      FROM web_sales,
                           date_dim
                      WHERE ws_sold_date_sk = d_date_sk
                        AND d_year BETWEEN 1999 AND 1999 + 2) sq2)
                SELECT channel,
                       i_brand_id,
                       i_class_id,
                       i_category_id,
                       sum(sales) AS sum_sales,
                       sum(number_sales) AS sum_number_sales
                FROM
                  (SELECT 'store' channel,
                                  i_brand_id,
                                  i_class_id,
                                  i_category_id,
                                  sum(ss_quantity*ss_list_price) sales,
                                  count(*) number_sales
                   FROM store_sales,
                        item,
                        date_dim
                   WHERE ss_item_sk IN
                       (SELECT ss_item_sk
                        FROM cross_items)
                     AND ss_item_sk = i_item_sk
                     AND ss_sold_date_sk = d_date_sk
                     AND d_year = 1999+2
                     AND d_moy = 11
                   GROUP BY i_brand_id,
                            i_class_id,
                            i_category_id
                   HAVING sum(ss_quantity*ss_list_price) >
                     (SELECT average_sales
                      FROM avg_sales)
                   UNION ALL SELECT 'catalog' channel,
                                              i_brand_id,
                                              i_class_id,
                                              i_category_id,
                                              sum(cs_quantity*cs_list_price) sales,
                                              count(*) number_sales
                   FROM catalog_sales,
                        item,
                        date_dim
                   WHERE cs_item_sk IN
                       (SELECT ss_item_sk
                        FROM cross_items)
                     AND cs_item_sk = i_item_sk
                     AND cs_sold_date_sk = d_date_sk
                     AND d_year = 1999+2
                     AND d_moy = 11
                   GROUP BY i_brand_id,
                            i_class_id,
                            i_category_id
                   HAVING sum(cs_quantity*cs_list_price) >
                     (SELECT average_sales
                      FROM avg_sales)
                   UNION ALL SELECT 'web' channel,
                                          i_brand_id,
                                          i_class_id,
                                          i_category_id,
                                          sum(ws_quantity*ws_list_price) sales,
                                          count(*) number_sales
                   FROM web_sales,
                        item,
                        date_dim
                   WHERE ws_item_sk IN
                       (SELECT ss_item_sk
                        FROM cross_items)
                     AND ws_item_sk = i_item_sk
                     AND ws_sold_date_sk = d_date_sk
                     AND d_year = 1999+2
                     AND d_moy = 11
                   GROUP BY i_brand_id,
                            i_class_id,
                            i_category_id
                   HAVING sum(ws_quantity*ws_list_price) >
                     (SELECT average_sales
                      FROM avg_sales)) y
                GROUP BY ROLLUP (channel,
                                 i_brand_id,
                                 i_class_id,
                                 i_category_id)
                ORDER BY channel NULLS FIRST,
                         i_brand_id NULLS FIRST,
                         i_class_id NULLS FIRST,
                         i_category_id NULLS FIRST
                LIMIT 100;
